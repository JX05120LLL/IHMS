{"remainingRequest":"D:\\code\\project\\健康管理系统\\健康管理系统\\前端\\personal-heath-view\\node_modules\\babel-loader\\lib\\index.js!D:\\code\\project\\健康管理系统\\健康管理系统\\前端\\personal-heath-view\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\code\\project\\健康管理系统\\健康管理系统\\前端\\personal-heath-view\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\code\\project\\健康管理系统\\健康管理系统\\前端\\personal-heath-view\\src\\views\\user\\ConsultationChat.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\code\\project\\健康管理系统\\健康管理系统\\前端\\personal-heath-view\\src\\views\\user\\ConsultationChat.vue","mtime":1746435866000},{"path":"D:\\code\\project\\健康管理系统\\健康管理系统\\前端\\personal-heath-view\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1746543375897},{"path":"D:\\code\\project\\健康管理系统\\健康管理系统\\前端\\personal-heath-view\\node_modules\\babel-loader\\lib\\index.js","mtime":1746543376599},{"path":"D:\\code\\project\\健康管理系统\\健康管理系统\\前端\\personal-heath-view\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1746543375897},{"path":"D:\\code\\project\\健康管理系统\\健康管理系统\\前端\\personal-heath-view\\node_modules\\vue-loader\\lib\\index.js","mtime":1746543376907}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["websocketService","name","data","consultationId","consultation","messages","loading","inputMessage","currentUserId","userAvatar","doctorAvatar","doctorName","healthDataDialogVisible","healthDataList","healthDataLoading","selectedHealthData","pollingTimer","created","$route","params","id","userInfo","JSON","parse","sessionStorage","getItem","url","loadConsultationDetail","loadMessages","initWebSocket","beforeDestroy","disconnect","methods","goBack","$router","push","response","$axios","get","code","loadDoctorInfo","doctorId","$message","error","msg","console","doctor","avatar","loadMessagesHealthData","$nextTick","scrollToBottom","healthDataMessages","filter","m","messageType","healthDataId","message","healthData","$set","connect","handleNewMessage","startPolling","exists","some","loadHealthData","sendMessage","trim","senderId","senderType","receiverId","content","isRead","isConnected","success","post","endConsultation","confirmed","$confirm","confirmButtonText","cancelButtonText","type","put","showHealthDataDialog","selectHealthData","row","shareHealthData","beforeImageUpload","file","isImage","startsWith","isLt5M","size","handleImageSuccess","res","imageUrl","formatTableDate","column","cellValue","formatDate","dateStr","date","Date","getFullYear","getMonth","toString","padStart","getDate","getHours","getMinutes","$refs","messagesContainer","scrollTop","scrollHeight","setInterval","stopPolling","clearInterval"],"sources":["src/views/user/ConsultationChat.vue"],"sourcesContent":["<template>\r\n  <div class=\"consultation-chat\">\r\n    <div class=\"chat-header\">\r\n      <el-button icon=\"el-icon-arrow-left\" @click=\"goBack\">返回</el-button>\r\n      <div class=\"consultation-info\" v-if=\"consultation\">\r\n        <h2>{{ consultation.title }}</h2>\r\n        <div class=\"status\">\r\n          <el-tag :type=\"consultation.status === 0 ? 'success' : 'info'\">\r\n            {{ consultation.status === 0 ? '进行中' : '已结束' }}\r\n          </el-tag>\r\n        </div>\r\n      </div>\r\n      <div class=\"actions\" v-if=\"consultation && consultation.status === 0\">\r\n        <el-button type=\"danger\" size=\"small\" @click=\"endConsultation\">结束会话</el-button>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"chat-container\" v-loading=\"loading\">\r\n      <div class=\"chat-messages\" ref=\"messagesContainer\">\r\n        <template v-if=\"messages.length > 0\">\r\n          <div \r\n            v-for=\"(message, index) in messages\" \r\n            :key=\"index\" \r\n            :class=\"['message-item', { 'self': message.senderId === currentUserId }]\"\r\n          >\r\n            <div class=\"avatar\">\r\n              <el-avatar \r\n                :size=\"40\" \r\n                :src=\"message.senderId === currentUserId ? userAvatar : doctorAvatar\"\r\n              ></el-avatar>\r\n            </div>\r\n            <div class=\"message-content\">\r\n              <div class=\"sender-name\">{{ message.senderId === currentUserId ? '我' : doctorName }}</div>\r\n              \r\n              <!-- 文本消息 -->\r\n              <div v-if=\"message.messageType === 0\" class=\"text-content\">\r\n                {{ message.content }}\r\n              </div>\r\n              \r\n              <!-- 图片消息 -->\r\n              <div v-else-if=\"message.messageType === 1\" class=\"image-content\">\r\n                <el-image \r\n                  :src=\"message.content\" \r\n                  :preview-src-list=\"[message.content]\"\r\n                  fit=\"cover\"\r\n                  class=\"message-image\"\r\n                ></el-image>\r\n              </div>\r\n              \r\n              <!-- 健康数据消息 -->\r\n              <div v-else-if=\"message.messageType === 2\" class=\"health-data-content\">\r\n                <div class=\"health-data-card\">\r\n                  <div class=\"health-data-header\">\r\n                    <i class=\"el-icon-data-analysis\"></i>\r\n                    <span>健康数据分享</span>\r\n                  </div>\r\n                  <div class=\"health-data-body\" v-if=\"message.healthData\">\r\n                    <div class=\"health-data-item\">\r\n                      <span class=\"item-label\">健康模型:</span>\r\n                      <span class=\"item-value\">{{ message.healthData.name }}</span>\r\n                    </div>\r\n                    <div class=\"health-data-item\">\r\n                      <span class=\"item-label\">记录值:</span>\r\n                      <span class=\"item-value\">{{ message.healthData.value }} {{ message.healthData.unit }}</span>\r\n                    </div>\r\n                    <div class=\"health-data-item\">\r\n                      <span class=\"item-label\">记录时间:</span>\r\n                      <span class=\"item-value\">{{ formatDate(message.healthData.createTime) }}</span>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"health-data-body\" v-else>\r\n                    <p>加载健康数据中...</p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"message-time\">{{ formatDate(message.createTime) }}</div>\r\n            </div>\r\n          </div>\r\n        </template>\r\n        <div v-else class=\"empty-messages\">\r\n          <el-empty description=\"暂无消息记录\"></el-empty>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"chat-input\" v-if=\"consultation && consultation.status === 0\">\r\n        <div class=\"input-actions\">\r\n          <el-tooltip content=\"分享健康数据\" placement=\"top\">\r\n            <el-button \r\n              icon=\"el-icon-data-analysis\" \r\n              circle \r\n              size=\"small\"\r\n              @click=\"showHealthDataDialog\"\r\n            ></el-button>\r\n          </el-tooltip>\r\n          <el-tooltip content=\"发送图片\" placement=\"top\">\r\n            <el-upload\r\n              class=\"image-upload\"\r\n              action=\"/api/personal-heath/v1.0/file/upload\"\r\n              :show-file-list=\"false\"\r\n              :on-success=\"handleImageSuccess\"\r\n              :before-upload=\"beforeImageUpload\"\r\n            >\r\n              <el-button \r\n                icon=\"el-icon-picture\" \r\n                circle \r\n                size=\"small\"\r\n              ></el-button>\r\n            </el-upload>\r\n          </el-tooltip>\r\n        </div>\r\n        <div class=\"input-box\">\r\n          <el-input\r\n            v-model=\"inputMessage\"\r\n            placeholder=\"输入消息...\"\r\n            type=\"textarea\"\r\n            :rows=\"3\"\r\n            @keyup.enter.native.ctrl=\"sendMessage\"\r\n          ></el-input>\r\n        </div>\r\n        <div class=\"send-button\">\r\n          <el-button type=\"primary\" @click=\"sendMessage\" :disabled=\"!inputMessage.trim()\">发送</el-button>\r\n        </div>\r\n      </div>\r\n      <div class=\"chat-ended\" v-else-if=\"consultation && consultation.status === 1\">\r\n        <el-alert\r\n          title=\"此咨询会话已结束\"\r\n          type=\"info\"\r\n          description=\"您可以通过创建新的咨询继续与医生交流\"\r\n          show-icon\r\n          :closable=\"false\"\r\n        ></el-alert>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- 健康数据分享对话框 -->\r\n    <el-dialog title=\"分享健康数据\" :visible.sync=\"healthDataDialogVisible\" width=\"50%\">\r\n      <div class=\"health-data-list\" v-loading=\"healthDataLoading\">\r\n        <template v-if=\"healthDataList.length > 0\">\r\n          <el-table\r\n            :data=\"healthDataList\"\r\n            style=\"width: 100%\"\r\n            @row-click=\"selectHealthData\"\r\n            highlight-current-row\r\n          >\r\n            <el-table-column type=\"index\" width=\"50\"></el-table-column>\r\n            <el-table-column label=\"健康模型\" prop=\"name\"></el-table-column>\r\n            <el-table-column label=\"记录值\">\r\n              <template slot-scope=\"scope\">\r\n                {{ scope.row.value }} {{ scope.row.unit }}\r\n              </template>\r\n            </el-table-column>\r\n            <el-table-column prop=\"createTime\" label=\"记录时间\" :formatter=\"formatTableDate\"></el-table-column>\r\n          </el-table>\r\n        </template>\r\n        <el-empty v-else description=\"暂无健康数据记录\"></el-empty>\r\n      </div>\r\n      <span slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button @click=\"healthDataDialogVisible = false\">取 消</el-button>\r\n        <el-button type=\"primary\" @click=\"shareHealthData\" :disabled=\"!selectedHealthData\">确认分享</el-button>\r\n      </span>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport websocketService from '@/utils/websocketService'\r\n\r\nexport default {\r\n  name: 'ConsultationChat',\r\n  data() {\r\n    return {\r\n      consultationId: null,\r\n      consultation: null,\r\n      messages: [],\r\n      loading: false,\r\n      inputMessage: '',\r\n      currentUserId: null,\r\n      userAvatar: '',\r\n      doctorAvatar: '',\r\n      doctorName: '',\r\n      // 健康数据\r\n      healthDataDialogVisible: false,\r\n      healthDataList: [],\r\n      healthDataLoading: false,\r\n      selectedHealthData: null,\r\n      // 轮询定时器\r\n      pollingTimer: null\r\n    }\r\n  },\r\n  created() {\r\n    this.consultationId = this.$route.params.id\r\n    // 获取当前用户信息\r\n    const userInfo = JSON.parse(sessionStorage.getItem('userInfo') || '{}')\r\n    this.currentUserId = userInfo.id\r\n    this.userAvatar = userInfo.url || '/img/default-avatar.png'\r\n    \r\n    // 初始化数据\r\n    this.loadConsultationDetail()\r\n    this.loadMessages()\r\n    \r\n    // 初始化WebSocket连接\r\n    this.initWebSocket()\r\n  },\r\n  beforeDestroy() {\r\n    // 断开WebSocket连接\r\n    websocketService.disconnect()\r\n  },\r\n  methods: {\r\n    // 返回上一页\r\n    goBack() {\r\n      this.$router.push('/doctor-consultation')\r\n    },\r\n    // 加载咨询详情\r\n    async loadConsultationDetail() {\r\n      if (!this.consultationId) return\r\n      \r\n      this.loading = true\r\n      try {\r\n        const response = await this.$axios.get(`/consultation/detail/${this.consultationId}`)\r\n        if (response.data.code === 200) {\r\n          this.consultation = response.data.data\r\n          \r\n          // 加载医生信息\r\n          await this.loadDoctorInfo(this.consultation.doctorId)\r\n        } else {\r\n          this.$message.error(response.data.msg || '获取咨询详情失败')\r\n        }\r\n      } catch (error) {\r\n        console.error('获取咨询详情出错', error)\r\n        this.$message.error('获取咨询详情出错')\r\n      } finally {\r\n        this.loading = false\r\n      }\r\n    },\r\n    // 加载医生信息\r\n    async loadDoctorInfo(doctorId) {\r\n      try {\r\n        const response = await this.$axios.get(`/doctor/detail/${doctorId}`)\r\n        if (response.data.code === 200) {\r\n          const doctor = response.data.data\r\n          this.doctorName = doctor.name\r\n          this.doctorAvatar = doctor.avatar || '/img/default-avatar.png'\r\n        }\r\n      } catch (error) {\r\n        console.error('获取医生信息出错', error)\r\n      }\r\n    },\r\n    // 加载消息列表\r\n    async loadMessages() {\r\n      if (!this.consultationId) return\r\n      \r\n      try {\r\n        const response = await this.$axios.get(`/doctor-message/list?consultationId=${this.consultationId}`)\r\n        if (response.data.code === 200) {\r\n          this.messages = response.data.data\r\n          \r\n          // 加载消息中的健康数据\r\n          this.loadMessagesHealthData()\r\n          \r\n          // 滚动到底部\r\n          this.$nextTick(() => {\r\n            this.scrollToBottom()\r\n          })\r\n        } else {\r\n          this.$message.error(response.data.msg || '获取消息列表失败')\r\n        }\r\n      } catch (error) {\r\n        console.error('获取消息列表出错', error)\r\n      }\r\n    },\r\n    // 加载消息中的健康数据\r\n    async loadMessagesHealthData() {\r\n      const healthDataMessages = this.messages.filter(m => m.messageType === 2 && m.healthDataId)\r\n      \r\n      for (const message of healthDataMessages) {\r\n        if (message.healthData) continue\r\n        \r\n        try {\r\n          const response = await this.$axios.get(`/health/record/detail/${message.healthDataId}`)\r\n          if (response.data.code === 200) {\r\n            this.$set(message, 'healthData', response.data.data)\r\n          }\r\n        } catch (error) {\r\n          console.error('获取健康数据详情出错', error)\r\n        }\r\n      }\r\n    },\r\n    // 初始化WebSocket连接\r\n    async initWebSocket() {\r\n      try {\r\n        await websocketService.connect(this.consultationId, this.handleNewMessage)\r\n      } catch (error) {\r\n        console.error('WebSocket连接失败，将使用轮询模式', error)\r\n        // 如果WebSocket连接失败，使用轮询作为备选方案\r\n        this.startPolling()\r\n      }\r\n    },\r\n    // 处理新消息\r\n    handleNewMessage(message) {\r\n      // 检查消息是否已存在（防止重复）\r\n      const exists = this.messages.some(m => m.id === message.id)\r\n      if (!exists) {\r\n        this.messages.push(message)\r\n        \r\n        // 如果是健康数据消息但没有健康数据详情，尝试加载\r\n        if (message.messageType === 2 && message.healthDataId && !message.healthData) {\r\n          this.loadHealthData(message)\r\n        }\r\n        \r\n        // 滚动到底部\r\n        this.$nextTick(() => {\r\n          this.scrollToBottom()\r\n        })\r\n      }\r\n    },\r\n    // 加载单条消息的健康数据\r\n    async loadHealthData(message) {\r\n      try {\r\n        const response = await this.$axios.get(`/health/record/detail/${message.healthDataId}`)\r\n        if (response.data.code === 200) {\r\n          this.$set(message, 'healthData', response.data.data)\r\n        }\r\n      } catch (error) {\r\n        console.error('获取健康数据详情出错', error)\r\n      }\r\n    },\r\n    // 发送消息\r\n    async sendMessage() {\r\n      if (!this.inputMessage.trim()) return\r\n      \r\n      try {\r\n        const message = {\r\n          consultationId: this.consultationId,\r\n          senderId: this.currentUserId,\r\n          senderType: 0, // 0:患者\r\n          receiverId: this.consultation.doctorId,\r\n          content: this.inputMessage,\r\n          messageType: 0, // 0:文本\r\n          isRead: 0 // 0:未读\r\n        }\r\n        \r\n        // 如果WebSocket已连接，使用WebSocket发送消息\r\n        if (websocketService.isConnected()) {\r\n          const success = websocketService.sendMessage(this.consultationId, message)\r\n          if (success) {\r\n            // 清空输入框\r\n            this.inputMessage = ''\r\n            return\r\n          }\r\n        }\r\n        \r\n        // WebSocket发送失败或未连接，使用HTTP API发送\r\n        const response = await this.$axios.post('/doctor-message/send', message)\r\n        if (response.data.code === 200) {\r\n          // 清空输入框\r\n          this.inputMessage = ''\r\n          // 重新加载消息\r\n          this.loadMessages()\r\n        } else {\r\n          this.$message.error(response.data.msg || '发送消息失败')\r\n        }\r\n      } catch (error) {\r\n        console.error('发送消息出错', error)\r\n        this.$message.error('发送消息出错')\r\n      }\r\n    },\r\n    // 结束会话\r\n    async endConsultation() {\r\n      try {\r\n        const confirmed = await this.$confirm('确定要结束此次咨询吗?', '提示', {\r\n          confirmButtonText: '确定',\r\n          cancelButtonText: '取消',\r\n          type: 'warning'\r\n        })\r\n        \r\n        if (confirmed) {\r\n          const response = await this.$axios.put(`/consultation/end/${this.consultationId}`)\r\n          if (response.data.code === 200) {\r\n            this.$message.success('咨询已结束')\r\n            this.loadConsultationDetail()\r\n          } else {\r\n            this.$message.error(response.data.msg || '结束咨询失败')\r\n          }\r\n        }\r\n      } catch (error) {\r\n        if (error !== 'cancel') {\r\n          console.error('结束咨询出错', error)\r\n          this.$message.error('结束咨询出错')\r\n        }\r\n      }\r\n    },\r\n    // 显示健康数据对话框\r\n    async showHealthDataDialog() {\r\n      this.healthDataDialogVisible = true\r\n      this.healthDataLoading = true\r\n      this.selectedHealthData = null\r\n      \r\n      try {\r\n        const userInfo = JSON.parse(sessionStorage.getItem('userInfo'))\r\n        const response = await this.$axios.get(`/health/record/list?userId=${userInfo.id}`)\r\n        if (response.data.code === 200) {\r\n          this.healthDataList = response.data.data || []\r\n        }\r\n      } catch (error) {\r\n        console.error('获取健康数据列表出错', error)\r\n        this.$message.error('获取健康数据列表出错')\r\n      } finally {\r\n        this.healthDataLoading = false\r\n      }\r\n    },\r\n    // 选择健康数据\r\n    selectHealthData(row) {\r\n      this.selectedHealthData = row\r\n    },\r\n    // 分享健康数据\r\n    async shareHealthData() {\r\n      if (!this.selectedHealthData) return\r\n      \r\n      try {\r\n        const message = {\r\n          consultationId: this.consultationId,\r\n          senderId: this.currentUserId,\r\n          senderType: 0, // 0:患者\r\n          receiverId: this.consultation.doctorId,\r\n          content: '分享健康数据',\r\n          messageType: 2, // 2:健康数据\r\n          healthDataId: this.selectedHealthData.id,\r\n          isRead: 0 // 0:未读\r\n        }\r\n        \r\n        // 如果WebSocket已连接，使用WebSocket分享健康数据\r\n        if (websocketService.isConnected()) {\r\n          const success = websocketService.sendMessage(this.consultationId, message)\r\n          if (success) {\r\n            this.healthDataDialogVisible = false\r\n            this.$message.success('健康数据分享成功')\r\n            return\r\n          }\r\n        }\r\n        \r\n        // WebSocket发送失败或未连接，使用HTTP API发送\r\n        const response = await this.$axios.post('/doctor-message/share', message)\r\n        if (response.data.code === 200) {\r\n          this.healthDataDialogVisible = false\r\n          this.$message.success('健康数据分享成功')\r\n          this.loadMessages()\r\n        } else {\r\n          this.$message.error(response.data.msg || '分享健康数据失败')\r\n        }\r\n      } catch (error) {\r\n        console.error('分享健康数据出错', error)\r\n        this.$message.error('分享健康数据出错')\r\n      }\r\n    },\r\n    // 图片上传前验证\r\n    beforeImageUpload(file) {\r\n      const isImage = file.type.startsWith('image/')\r\n      const isLt5M = file.size / 1024 / 1024 < 5\r\n      \r\n      if (!isImage) {\r\n        this.$message.error('只能上传图片文件')\r\n        return false\r\n      }\r\n      if (!isLt5M) {\r\n        this.$message.error('图片大小不能超过 5MB')\r\n        return false\r\n      }\r\n      return true\r\n    },\r\n    // 图片上传成功\r\n    async handleImageSuccess(res) {\r\n      if (res.code !== 200) {\r\n        this.$message.error('图片上传失败')\r\n        return\r\n      }\r\n      \r\n      try {\r\n        const imageUrl = res.data\r\n        const message = {\r\n          consultationId: this.consultationId,\r\n          receiverId: this.consultation.doctorId,\r\n          content: imageUrl,\r\n          messageType: 1, // 1:图片\r\n          isRead: 0 // 0:未读\r\n        }\r\n        \r\n        const response = await this.$axios.post('/doctor-message/send', message)\r\n        if (response.data.code === 200) {\r\n          this.$message.success('图片发送成功')\r\n          this.loadMessages()\r\n        } else {\r\n          this.$message.error(response.data.msg || '发送图片失败')\r\n        }\r\n      } catch (error) {\r\n        console.error('发送图片出错', error)\r\n        this.$message.error('发送图片出错')\r\n      }\r\n    },\r\n    // 格式化表格日期\r\n    formatTableDate(row, column, cellValue) {\r\n      return this.formatDate(cellValue)\r\n    },\r\n    // 格式化日期\r\n    formatDate(dateStr) {\r\n      if (!dateStr) return ''\r\n      const date = new Date(dateStr)\r\n      return `${date.getFullYear()}-${(date.getMonth() + 1).toString().padStart(2, '0')}-${date.getDate().toString().padStart(2, '0')} ${date.getHours().toString().padStart(2, '0')}:${date.getMinutes().toString().padStart(2, '0')}`\r\n    },\r\n    // 滚动到底部\r\n    scrollToBottom() {\r\n      if (this.$refs.messagesContainer) {\r\n        this.$refs.messagesContainer.scrollTop = this.$refs.messagesContainer.scrollHeight\r\n      }\r\n    },\r\n    // 开始轮询\r\n    startPolling() {\r\n      this.pollingTimer = setInterval(() => {\r\n        this.loadMessages()\r\n      }, 5000) // 每5秒轮询一次\r\n    },\r\n    // 停止轮询\r\n    stopPolling() {\r\n      if (this.pollingTimer) {\r\n        clearInterval(this.pollingTimer)\r\n        this.pollingTimer = null\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped lang=\"scss\">\r\n.consultation-chat {\r\n  height: calc(100vh - 150px);\r\n  display: flex;\r\n  flex-direction: column;\r\n  \r\n  .chat-header {\r\n    display: flex;\r\n    align-items: center;\r\n    padding: 15px 20px;\r\n    border-bottom: 1px solid #eee;\r\n    \r\n    .consultation-info {\r\n      flex: 1;\r\n      margin-left: 15px;\r\n      \r\n      h2 {\r\n        margin: 0 0 5px;\r\n        font-size: 18px;\r\n      }\r\n      \r\n      .status {\r\n        font-size: 14px;\r\n      }\r\n    }\r\n  }\r\n  \r\n  .chat-container {\r\n    flex: 1;\r\n    display: flex;\r\n    flex-direction: column;\r\n    overflow: hidden;\r\n    \r\n    .chat-messages {\r\n      flex: 1;\r\n      padding: 20px;\r\n      overflow-y: auto;\r\n      \r\n      .empty-messages {\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n        height: 100%;\r\n      }\r\n      \r\n      .message-item {\r\n        display: flex;\r\n        margin-bottom: 20px;\r\n        \r\n        &.self {\r\n          flex-direction: row-reverse;\r\n          \r\n          .message-content {\r\n            align-items: flex-end;\r\n            margin-right: 10px;\r\n            margin-left: 0;\r\n            \r\n            .text-content {\r\n              background-color: #15559a;\r\n              color: white;\r\n              border-top-right-radius: 0;\r\n              border-top-left-radius: 8px;\r\n            }\r\n            \r\n            .health-data-content {\r\n              align-self: flex-end;\r\n            }\r\n          }\r\n        }\r\n        \r\n        .avatar {\r\n          flex-shrink: 0;\r\n        }\r\n        \r\n        .message-content {\r\n          display: flex;\r\n          flex-direction: column;\r\n          margin-left: 10px;\r\n          max-width: 70%;\r\n          \r\n          .sender-name {\r\n            font-size: 12px;\r\n            color: #999;\r\n            margin-bottom: 5px;\r\n          }\r\n          \r\n          .text-content {\r\n            background-color: #f5f5f5;\r\n            padding: 10px 15px;\r\n            border-radius: 8px;\r\n            border-top-left-radius: 0;\r\n            word-break: break-word;\r\n          }\r\n          \r\n          .image-content {\r\n            max-width: 300px;\r\n            \r\n            .message-image {\r\n              max-width: 100%;\r\n              border-radius: 8px;\r\n            }\r\n          }\r\n          \r\n          .health-data-content {\r\n            .health-data-card {\r\n              border: 1px solid #eee;\r\n              border-radius: 8px;\r\n              overflow: hidden;\r\n              width: 300px;\r\n              \r\n              .health-data-header {\r\n                background-color: #f6f8fa;\r\n                padding: 10px;\r\n                font-weight: bold;\r\n                border-bottom: 1px solid #eee;\r\n                display: flex;\r\n                align-items: center;\r\n                \r\n                i {\r\n                  margin-right: 5px;\r\n                  color: #15559a;\r\n                }\r\n              }\r\n              \r\n              .health-data-body {\r\n                padding: 10px;\r\n                background-color: white;\r\n                \r\n                .health-data-item {\r\n                  display: flex;\r\n                  margin-bottom: 5px;\r\n                  \r\n                  .item-label {\r\n                    color: #666;\r\n                    width: 60px;\r\n                  }\r\n                  \r\n                  .item-value {\r\n                    font-weight: 500;\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n          \r\n          .message-time {\r\n            font-size: 12px;\r\n            color: #999;\r\n            margin-top: 5px;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    \r\n    .chat-input {\r\n      padding: 15px;\r\n      border-top: 1px solid #eee;\r\n      display: flex;\r\n      \r\n      .input-actions {\r\n        display: flex;\r\n        flex-direction: column;\r\n        justify-content: center;\r\n        gap: 10px;\r\n        margin-right: 10px;\r\n        \r\n        .image-upload {\r\n          display: inline-block;\r\n        }\r\n      }\r\n      \r\n      .input-box {\r\n        flex: 1;\r\n      }\r\n      \r\n      .send-button {\r\n        align-self: flex-end;\r\n        margin-left: 10px;\r\n      }\r\n    }\r\n    \r\n    .chat-ended {\r\n      padding: 20px;\r\n    }\r\n  }\r\n  \r\n  .health-data-list {\r\n    max-height: 400px;\r\n    overflow-y: auto;\r\n  }\r\n}\r\n</style> "],"mappings":"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","ignoreList":[]}]}