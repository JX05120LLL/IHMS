{"remainingRequest":"D:\\code\\project\\健康管理系统\\健康管理系统\\前端\\personal-heath-view\\node_modules\\babel-loader\\lib\\index.js!D:\\code\\project\\健康管理系统\\健康管理系统\\前端\\personal-heath-view\\src\\utils\\websocketService.js","dependencies":[{"path":"D:\\code\\project\\健康管理系统\\健康管理系统\\前端\\personal-heath-view\\src\\utils\\websocketService.js","mtime":1746438770000},{"path":"D:\\code\\project\\健康管理系统\\健康管理系统\\前端\\personal-heath-view\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1746543375897},{"path":"D:\\code\\project\\健康管理系统\\健康管理系统\\前端\\personal-heath-view\\node_modules\\babel-loader\\lib\\index.js","mtime":1746543376599}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8g56e76Zmk5a+55aSW6YOo5bqT55qE5L6d6LWW77yM5pS55Li657qv6L2u6K+i5pa55byPCi8vIGltcG9ydCBTb2NrSlMgZnJvbSAnc29ja2pzLWNsaWVudCcKLy8gaW1wb3J0IFN0b21wIGZyb20gJ3dlYnN0b21wLWNsaWVudCcKCmNsYXNzIFdlYlNvY2tldFNlcnZpY2UgewogIGNvbnN0cnVjdG9yKCkgewogICAgdGhpcy5zdG9tcENsaWVudCA9IG51bGw7CiAgICB0aGlzLmNvbm5lY3RlZCA9IGZhbHNlOwogICAgdGhpcy5wb2xsaW5nQ2FsbGJhY2tzID0gbmV3IE1hcCgpOwogICAgdGhpcy5wb2xsaW5nSW50ZXJ2YWxzID0gbmV3IE1hcCgpOwogIH0KCiAgLy8g6L+e5o6lV2ViU29ja2V077yI5qih5ouf5pa55rOV77yM5a6e6ZmF5L2/55So6L2u6K+i77yJCiAgY29ubmVjdChjb25zdWx0YXRpb25JZCwgbWVzc2FnZUNhbGxiYWNrKSB7CiAgICBjb25zb2xlLmxvZygn5L2/55So6L2u6K+i5qih5byP5pu/5LujV2ViU29ja2V06L+e5o6lJyk7CiAgICAvLyDkv53lrZjlm57osIPlh73mlbAKICAgIHRoaXMucG9sbGluZ0NhbGxiYWNrcy5zZXQoY29uc3VsdGF0aW9uSWQsIG1lc3NhZ2VDYWxsYmFjayk7CiAgICB0aGlzLmNvbm5lY3RlZCA9IGZhbHNlOwogICAgcmV0dXJuIFByb21pc2UucmVqZWN0KCdXZWJTb2NrZXTkvp3otZbnvLrlpLHvvIzkvb/nlKjova7or6LmqKHlvI8nKTsKICB9CgogIC8vIOaWreW8gFdlYlNvY2tldOi/nuaOpQogIGRpc2Nvbm5lY3QoKSB7CiAgICB0aGlzLmNvbm5lY3RlZCA9IGZhbHNlOwogICAgY29uc29sZS5sb2coJ+iBiuWkqei/nuaOpeW3suaWreW8gCcpOwoKICAgIC8vIOa4hemZpOaJgOaciei9ruivoumXtOmalAogICAgdGhpcy5wb2xsaW5nQ2FsbGJhY2tzLmNsZWFyKCk7CiAgICB0aGlzLnBvbGxpbmdJbnRlcnZhbHMuZm9yRWFjaChpbnRlcnZhbCA9PiB7CiAgICAgIGNsZWFySW50ZXJ2YWwoaW50ZXJ2YWwpOwogICAgfSk7CiAgICB0aGlzLnBvbGxpbmdJbnRlcnZhbHMuY2xlYXIoKTsKICB9CgogIC8vIOWPkemAgea2iOaBrwogIHNlbmRNZXNzYWdlKGNvbnN1bHRhdGlvbklkLCBtZXNzYWdlKSB7CiAgICBjb25zb2xlLmxvZygn5L2/55SoSFRUUCBBUEnlj5HpgIHmtojmga8nKTsKICAgIHJldHVybiBmYWxzZTsKICB9CgogIC8vIOajgOafpeaYr+WQpuW3sui/nuaOpQogIGlzQ29ubmVjdGVkKCkgewogICAgcmV0dXJuIHRoaXMuY29ubmVjdGVkOwogIH0KCiAgLy8g5ZCv5Yqo5a+554m55a6a5Lya6K+d55qE6L2u6K+iCiAgc3RhcnRQb2xsaW5nKGNvbnN1bHRhdGlvbklkLCBheGlvcywgaW50ZXJ2YWwgPSAzMDAwKSB7CiAgICBpZiAodGhpcy5wb2xsaW5nSW50ZXJ2YWxzLmhhcyhjb25zdWx0YXRpb25JZCkpIHsKICAgICAgcmV0dXJuOyAvLyDlpoLmnpzlt7Lnu4/lnKjova7or6LvvIzkuI3opoHlho3liJvlu7rmlrDnmoQKICAgIH0KICAgIGxldCBsYXN0TWVzc2FnZUlkID0gMDsKICAgIGNvbnN0IHBvbGxpbmdJbnRlcnZhbCA9IHNldEludGVydmFsKGFzeW5jICgpID0+IHsKICAgICAgdHJ5IHsKICAgICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGF4aW9zLmdldChgL2RvY3Rvci1tZXNzYWdlL2xpc3Q/Y29uc3VsdGF0aW9uSWQ9JHtjb25zdWx0YXRpb25JZH1gKTsKICAgICAgICBpZiAocmVzcG9uc2UuZGF0YS5jb2RlID09PSAyMDApIHsKICAgICAgICAgIGNvbnN0IG1lc3NhZ2VzID0gcmVzcG9uc2UuZGF0YS5kYXRhOwoKICAgICAgICAgIC8vIOaJvuWHuuaWsOa2iOaBr++8iElE5aSn5LqO5LiK5qyh55yL5Yiw55qE5pyA5aSnSUTvvIkKICAgICAgICAgIGNvbnN0IG5ld01lc3NhZ2VzID0gbWVzc2FnZXMuZmlsdGVyKG0gPT4gbS5pZCA+IGxhc3RNZXNzYWdlSWQpOwogICAgICAgICAgaWYgKG5ld01lc3NhZ2VzLmxlbmd0aCA+IDApIHsKICAgICAgICAgICAgLy8g5pu05paw5pyA5ZCO5raI5oGvSUQKICAgICAgICAgICAgbGFzdE1lc3NhZ2VJZCA9IE1hdGgubWF4KC4uLm1lc3NhZ2VzLm1hcChtID0+IG0uaWQpKTsKCiAgICAgICAgICAgIC8vIOWvueavj+adoeaWsOa2iOaBr+iwg+eUqOWbnuiwgwogICAgICAgICAgICBjb25zdCBjYWxsYmFjayA9IHRoaXMucG9sbGluZ0NhbGxiYWNrcy5nZXQoY29uc3VsdGF0aW9uSWQpOwogICAgICAgICAgICBpZiAoY2FsbGJhY2spIHsKICAgICAgICAgICAgICBuZXdNZXNzYWdlcy5mb3JFYWNoKG1lc3NhZ2UgPT4gY2FsbGJhY2sobWVzc2FnZSkpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9IGNhdGNoIChlcnJvcikgewogICAgICAgIGNvbnNvbGUuZXJyb3IoJ+i9ruivoua2iOaBr+Wksei0pTonLCBlcnJvcik7CiAgICAgIH0KICAgIH0sIGludGVydmFsKTsKICAgIHRoaXMucG9sbGluZ0ludGVydmFscy5zZXQoY29uc3VsdGF0aW9uSWQsIHBvbGxpbmdJbnRlcnZhbCk7CiAgfQoKICAvLyDlgZzmraLlr7nnibnlrprkvJror53nmoTova7or6IKICBzdG9wUG9sbGluZyhjb25zdWx0YXRpb25JZCkgewogICAgY29uc3QgaW50ZXJ2YWwgPSB0aGlzLnBvbGxpbmdJbnRlcnZhbHMuZ2V0KGNvbnN1bHRhdGlvbklkKTsKICAgIGlmIChpbnRlcnZhbCkgewogICAgICBjbGVhckludGVydmFsKGludGVydmFsKTsKICAgICAgdGhpcy5wb2xsaW5nSW50ZXJ2YWxzLmRlbGV0ZShjb25zdWx0YXRpb25JZCk7CiAgICB9CiAgfQp9CmV4cG9ydCBkZWZhdWx0IG5ldyBXZWJTb2NrZXRTZXJ2aWNlKCk7"},{"version":3,"names":["WebSocketService","constructor","stompClient","connected","pollingCallbacks","Map","pollingIntervals","connect","consultationId","messageCallback","console","log","set","Promise","reject","disconnect","clear","forEach","interval","clearInterval","sendMessage","message","isConnected","startPolling","axios","has","lastMessageId","pollingInterval","setInterval","response","get","data","code","messages","newMessages","filter","m","id","length","Math","max","map","callback","error","stopPolling","delete"],"sources":["D:/code/project/健康管理系统/健康管理系统/前端/personal-heath-view/src/utils/websocketService.js"],"sourcesContent":["// 移除对外部库的依赖，改为纯轮询方式\r\n// import SockJS from 'sockjs-client'\r\n// import Stomp from 'webstomp-client'\r\n\r\nclass WebSocketService {\r\n  constructor() {\r\n    this.stompClient = null\r\n    this.connected = false\r\n    this.pollingCallbacks = new Map()\r\n    this.pollingIntervals = new Map()\r\n  }\r\n\r\n  // 连接WebSocket（模拟方法，实际使用轮询）\r\n  connect(consultationId, messageCallback) {\r\n    console.log('使用轮询模式替代WebSocket连接')\r\n    // 保存回调函数\r\n    this.pollingCallbacks.set(consultationId, messageCallback)\r\n    this.connected = false\r\n    \r\n    return Promise.reject('WebSocket依赖缺失，使用轮询模式')\r\n  }\r\n\r\n  // 断开WebSocket连接\r\n  disconnect() {\r\n    this.connected = false\r\n    console.log('聊天连接已断开')\r\n    \r\n    // 清除所有轮询间隔\r\n    this.pollingCallbacks.clear()\r\n    this.pollingIntervals.forEach((interval) => {\r\n      clearInterval(interval)\r\n    })\r\n    this.pollingIntervals.clear()\r\n  }\r\n\r\n  // 发送消息\r\n  sendMessage(consultationId, message) {\r\n    console.log('使用HTTP API发送消息')\r\n    return false\r\n  }\r\n\r\n  // 检查是否已连接\r\n  isConnected() {\r\n    return this.connected\r\n  }\r\n\r\n  // 启动对特定会话的轮询\r\n  startPolling(consultationId, axios, interval = 3000) {\r\n    if (this.pollingIntervals.has(consultationId)) {\r\n      return // 如果已经在轮询，不要再创建新的\r\n    }\r\n    \r\n    let lastMessageId = 0\r\n    \r\n    const pollingInterval = setInterval(async () => {\r\n      try {\r\n        const response = await axios.get(`/doctor-message/list?consultationId=${consultationId}`)\r\n        if (response.data.code === 200) {\r\n          const messages = response.data.data\r\n          \r\n          // 找出新消息（ID大于上次看到的最大ID）\r\n          const newMessages = messages.filter(m => m.id > lastMessageId)\r\n          \r\n          if (newMessages.length > 0) {\r\n            // 更新最后消息ID\r\n            lastMessageId = Math.max(...messages.map(m => m.id))\r\n            \r\n            // 对每条新消息调用回调\r\n            const callback = this.pollingCallbacks.get(consultationId)\r\n            if (callback) {\r\n              newMessages.forEach(message => callback(message))\r\n            }\r\n          }\r\n        }\r\n      } catch (error) {\r\n        console.error('轮询消息失败:', error)\r\n      }\r\n    }, interval)\r\n    \r\n    this.pollingIntervals.set(consultationId, pollingInterval)\r\n  }\r\n  \r\n  // 停止对特定会话的轮询\r\n  stopPolling(consultationId) {\r\n    const interval = this.pollingIntervals.get(consultationId)\r\n    if (interval) {\r\n      clearInterval(interval)\r\n      this.pollingIntervals.delete(consultationId)\r\n    }\r\n  }\r\n}\r\n\r\nexport default new WebSocketService() "],"mappings":"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","ignoreList":[]}]}