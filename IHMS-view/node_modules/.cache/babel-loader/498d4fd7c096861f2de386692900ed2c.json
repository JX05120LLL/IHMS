{"remainingRequest":"D:\\code\\project\\健康管理系统\\健康管理系统\\前端\\personal-heath-view\\node_modules\\babel-loader\\lib\\index.js!D:\\code\\project\\健康管理系统\\健康管理系统\\前端\\personal-heath-view\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\code\\project\\健康管理系统\\健康管理系统\\前端\\personal-heath-view\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\code\\project\\健康管理系统\\健康管理系统\\前端\\personal-heath-view\\src\\views\\doctor\\DoctorChat.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\code\\project\\健康管理系统\\健康管理系统\\前端\\personal-heath-view\\src\\views\\doctor\\DoctorChat.vue","mtime":1746438790000},{"path":"D:\\code\\project\\健康管理系统\\健康管理系统\\前端\\personal-heath-view\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1746543375897},{"path":"D:\\code\\project\\健康管理系统\\健康管理系统\\前端\\personal-heath-view\\node_modules\\babel-loader\\lib\\index.js","mtime":1746543376599},{"path":"D:\\code\\project\\健康管理系统\\健康管理系统\\前端\\personal-heath-view\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1746543375897},{"path":"D:\\code\\project\\健康管理系统\\健康管理系统\\前端\\personal-heath-view\\node_modules\\vue-loader\\lib\\index.js","mtime":1746543376907}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["websocketService","name","data","consultationId","consultation","messages","loading","inputMessage","currentUserId","doctorAvatar","patientAvatar","patientName","patientId","analysisDialogVisible","selectedHealthData","analysisText","pollingInterval","created","$route","params","id","doctorInfo","JSON","parse","sessionStorage","getItem","avatar","loadConsultationDetail","loadMessages","initWebSocket","beforeDestroy","disconnect","stopPolling","methods","goBack","$router","push","response","$axios","get","code","loadPatientInfo","$message","error","msg","console","patient","userName","userAvatar","loadMessagesHealthData","$nextTick","scrollToBottom","healthDataMessages","filter","m","messageType","healthDataId","message","healthData","$set","connect","handleNewMessage","startPolling","log","setInterval","clearInterval","exists","some","loadHealthData","sendMessage","trim","senderId","senderType","receiverId","content","isRead","isConnected","success","post","endConsultation","confirmed","$confirm","confirmButtonText","cancelButtonText","type","put","analyzeHealthData","analysisTemplate","value","unit","valueRange","ranges","split","minValue","parseFloat","maxValue","currentValue","sendAnalysis","warning","formatDate","dateStr","date","Date","getFullYear","getMonth","toString","padStart","getDate","getHours","getMinutes","container","$refs","messagesContainer","scrollTop","scrollHeight"],"sources":["src/views/doctor/DoctorChat.vue"],"sourcesContent":["<template>\r\n  <div class=\"doctor-chat\">\r\n    <div class=\"chat-header\">\r\n      <el-button icon=\"el-icon-arrow-left\" @click=\"goBack\">返回</el-button>\r\n      <div class=\"consultation-info\" v-if=\"consultation\">\r\n        <h2>{{ consultation.title }}</h2>\r\n        <div class=\"status\">\r\n          <el-tag :type=\"consultation.status === 0 ? 'success' : 'info'\">\r\n            {{ consultation.status === 0 ? '进行中' : '已结束' }}\r\n          </el-tag>\r\n        </div>\r\n      </div>\r\n      <div class=\"actions\" v-if=\"consultation && consultation.status === 0\">\r\n        <el-button type=\"danger\" size=\"small\" @click=\"endConsultation\">结束会话</el-button>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"chat-container\" v-loading=\"loading\">\r\n      <div class=\"chat-messages\" ref=\"messagesContainer\">\r\n        <template v-if=\"messages.length > 0\">\r\n          <div \r\n            v-for=\"(message, index) in messages\" \r\n            :key=\"index\" \r\n            :class=\"['message-item', { 'self': message.senderId === currentUserId }]\"\r\n          >\r\n            <div class=\"avatar\">\r\n              <el-avatar \r\n                :size=\"40\" \r\n                :src=\"message.senderId === currentUserId ? doctorAvatar : patientAvatar\"\r\n              ></el-avatar>\r\n            </div>\r\n            <div class=\"message-content\">\r\n              <div class=\"sender-name\">{{ message.senderId === currentUserId ? '我(医生)' : patientName }}</div>\r\n              \r\n              <!-- 文本消息 -->\r\n              <div v-if=\"message.messageType === 0\" class=\"text-content\">\r\n                {{ message.content }}\r\n              </div>\r\n              \r\n              <!-- 图片消息 -->\r\n              <div v-else-if=\"message.messageType === 1\" class=\"image-content\">\r\n                <el-image \r\n                  :src=\"message.content\" \r\n                  :preview-src-list=\"[message.content]\"\r\n                  fit=\"cover\"\r\n                  class=\"message-image\"\r\n                ></el-image>\r\n              </div>\r\n              \r\n              <!-- 健康数据消息 -->\r\n              <div v-else-if=\"message.messageType === 2\" class=\"health-data-content\">\r\n                <div class=\"health-data-card\">\r\n                  <div class=\"health-data-header\">\r\n                    <i class=\"el-icon-data-analysis\"></i>\r\n                    <span>患者健康数据</span>\r\n                  </div>\r\n                  <div class=\"health-data-body\" v-if=\"message.healthData\">\r\n                    <div class=\"health-data-item\">\r\n                      <span class=\"item-label\">健康模型:</span>\r\n                      <span class=\"item-value\">{{ message.healthData.name }}</span>\r\n                    </div>\r\n                    <div class=\"health-data-item\">\r\n                      <span class=\"item-label\">记录值:</span>\r\n                      <span class=\"item-value\">{{ message.healthData.value }} {{ message.healthData.unit }}</span>\r\n                    </div>\r\n                    <div class=\"health-data-item\">\r\n                      <span class=\"item-label\">记录时间:</span>\r\n                      <span class=\"item-value\">{{ formatDate(message.healthData.createTime) }}</span>\r\n                    </div>\r\n                    <div class=\"health-data-analysis\">\r\n                      <el-button type=\"primary\" size=\"small\" @click=\"analyzeHealthData(message.healthData)\">分析数据</el-button>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"health-data-body\" v-else>\r\n                    <p>加载健康数据中...</p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"message-time\">{{ formatDate(message.createTime) }}</div>\r\n            </div>\r\n          </div>\r\n        </template>\r\n        <div v-else class=\"empty-messages\">\r\n          <el-empty description=\"暂无消息记录\"></el-empty>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"chat-input\" v-if=\"consultation && consultation.status === 0\">\r\n        <div class=\"input-box\">\r\n          <el-input\r\n            v-model=\"inputMessage\"\r\n            placeholder=\"输入专业建议...\"\r\n            type=\"textarea\"\r\n            :rows=\"3\"\r\n            @keyup.enter.native.ctrl=\"sendMessage\"\r\n          ></el-input>\r\n        </div>\r\n        <div class=\"send-button\">\r\n          <el-button type=\"primary\" @click=\"sendMessage\" :disabled=\"!inputMessage.trim()\">发送</el-button>\r\n        </div>\r\n      </div>\r\n      <div class=\"chat-ended\" v-else-if=\"consultation && consultation.status === 1\">\r\n        <el-alert\r\n          title=\"此咨询会话已结束\"\r\n          type=\"info\"\r\n          description=\"咨询已结束，无法继续发送消息\"\r\n          show-icon\r\n          :closable=\"false\"\r\n        ></el-alert>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- 健康数据分析对话框 -->\r\n    <el-dialog title=\"健康数据分析\" :visible.sync=\"analysisDialogVisible\" width=\"50%\">\r\n      <div class=\"health-data-analysis-content\">\r\n        <div class=\"health-data-info\" v-if=\"selectedHealthData\">\r\n          <h3>{{ selectedHealthData.name }}</h3>\r\n          <div class=\"health-data-value\">\r\n            <span class=\"label\">记录值:</span>\r\n            <span class=\"value\">{{ selectedHealthData.value }} {{ selectedHealthData.unit }}</span>\r\n          </div>\r\n          <div class=\"health-data-range\" v-if=\"selectedHealthData.valueRange\">\r\n            <span class=\"label\">正常范围:</span>\r\n            <span class=\"value\">{{ selectedHealthData.valueRange.split(',')[0] }} - {{ selectedHealthData.valueRange.split(',')[1] }} {{ selectedHealthData.unit }}</span>\r\n          </div>\r\n          <div class=\"analysis-result\">\r\n            <h4>分析结果</h4>\r\n            <el-input\r\n              type=\"textarea\"\r\n              :rows=\"4\"\r\n              placeholder=\"请输入您的专业分析与建议...\"\r\n              v-model=\"analysisText\"\r\n            ></el-input>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <span slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button @click=\"analysisDialogVisible = false\">取 消</el-button>\r\n        <el-button type=\"primary\" @click=\"sendAnalysis\">发送给患者</el-button>\r\n      </span>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport websocketService from '@/utils/websocketService'\r\n\r\nexport default {\r\n  name: 'DoctorChat',\r\n  data() {\r\n    return {\r\n      consultationId: null,\r\n      consultation: null,\r\n      messages: [],\r\n      loading: false,\r\n      inputMessage: '',\r\n      currentUserId: null,\r\n      doctorAvatar: '',\r\n      patientAvatar: '/img/default-avatar.png',\r\n      patientName: '患者',\r\n      patientId: null,\r\n      // 分析相关\r\n      analysisDialogVisible: false,\r\n      selectedHealthData: null,\r\n      analysisText: '',\r\n      pollingInterval: null\r\n    }\r\n  },\r\n  created() {\r\n    this.consultationId = this.$route.params.id\r\n    // 获取当前医生信息\r\n    const doctorInfo = JSON.parse(sessionStorage.getItem('doctorInfo') || '{}')\r\n    this.currentUserId = doctorInfo.id\r\n    this.doctorAvatar = doctorInfo.avatar || '/img/default-avatar.png'\r\n    \r\n    // 初始化数据\r\n    this.loadConsultationDetail()\r\n    this.loadMessages()\r\n    \r\n    // 初始化WebSocket连接\r\n    this.initWebSocket()\r\n  },\r\n  beforeDestroy() {\r\n    // 断开WebSocket连接\r\n    websocketService.disconnect()\r\n    // 停止轮询\r\n    this.stopPolling()\r\n  },\r\n  methods: {\r\n    // 返回上一页\r\n    goBack() {\r\n      this.$router.push('/doctor-consultations')\r\n    },\r\n    // 加载咨询详情\r\n    async loadConsultationDetail() {\r\n      if (!this.consultationId) return\r\n      \r\n      this.loading = true\r\n      try {\r\n        const response = await this.$axios.get(`/consultation/detail/${this.consultationId}`)\r\n        if (response.data.code === 200) {\r\n          this.consultation = response.data.data\r\n          this.patientId = this.consultation.patientId\r\n          \r\n          // 加载患者信息\r\n          await this.loadPatientInfo(this.consultation.patientId)\r\n        } else {\r\n          this.$message.error(response.data.msg || '获取咨询详情失败')\r\n        }\r\n      } catch (error) {\r\n        console.error('获取咨询详情出错', error)\r\n        this.$message.error('获取咨询详情出错')\r\n      } finally {\r\n        this.loading = false\r\n      }\r\n    },\r\n    // 加载患者信息\r\n    async loadPatientInfo(patientId) {\r\n      try {\r\n        const response = await this.$axios.get(`/user/detail/${patientId}`)\r\n        if (response.data.code === 200) {\r\n          const patient = response.data.data\r\n          this.patientName = patient.userName || '患者'\r\n          this.patientAvatar = patient.userAvatar || '/img/default-avatar.png'\r\n        }\r\n      } catch (error) {\r\n        console.error('获取患者信息出错', error)\r\n      }\r\n    },\r\n    // 加载消息列表\r\n    async loadMessages() {\r\n      if (!this.consultationId) return\r\n      \r\n      try {\r\n        const response = await this.$axios.get(`/doctor-message/list?consultationId=${this.consultationId}`)\r\n        if (response.data.code === 200) {\r\n          this.messages = response.data.data\r\n          \r\n          // 加载消息中的健康数据\r\n          this.loadMessagesHealthData()\r\n          \r\n          // 滚动到底部\r\n          this.$nextTick(() => {\r\n            this.scrollToBottom()\r\n          })\r\n        } else {\r\n          this.$message.error(response.data.msg || '获取消息列表失败')\r\n        }\r\n      } catch (error) {\r\n        console.error('获取消息列表出错', error)\r\n      }\r\n    },\r\n    // 加载消息中的健康数据\r\n    async loadMessagesHealthData() {\r\n      const healthDataMessages = this.messages.filter(m => m.messageType === 2 && m.healthDataId)\r\n      \r\n      for (const message of healthDataMessages) {\r\n        if (message.healthData) continue\r\n        \r\n        try {\r\n          const response = await this.$axios.get(`/health/record/detail/${message.healthDataId}`)\r\n          if (response.data.code === 200) {\r\n            this.$set(message, 'healthData', response.data.data)\r\n          }\r\n        } catch (error) {\r\n          console.error('获取健康数据详情出错', error)\r\n        }\r\n      }\r\n    },\r\n    // 初始化WebSocket连接\r\n    async initWebSocket() {\r\n      try {\r\n        await websocketService.connect(this.consultationId, this.handleNewMessage)\r\n      } catch (error) {\r\n        console.error('WebSocket连接失败，将使用轮询模式', error)\r\n        // 使用新的轮询方式\r\n        this.startPolling()\r\n      }\r\n    },\r\n    // 使用轮询替代WebSocket\r\n    startPolling() {\r\n      console.log('启动消息轮询机制')\r\n      // 使用WebSocketService的轮询功能\r\n      websocketService.startPolling(this.consultationId, this.$axios, 3000)\r\n      \r\n      // 保留原有轮询作为备份\r\n      if (!this.pollingInterval) {\r\n        this.pollingInterval = setInterval(() => {\r\n          this.loadMessages()\r\n        }, 5000)\r\n      }\r\n    },\r\n    // 停止轮询\r\n    stopPolling() {\r\n      websocketService.stopPolling(this.consultationId)\r\n      \r\n      if (this.pollingInterval) {\r\n        clearInterval(this.pollingInterval)\r\n        this.pollingInterval = null\r\n      }\r\n    },\r\n    // 处理新消息\r\n    handleNewMessage(message) {\r\n      // 检查消息是否已存在（防止重复）\r\n      const exists = this.messages.some(m => m.id === message.id)\r\n      if (!exists) {\r\n        this.messages.push(message)\r\n        \r\n        // 如果是健康数据消息但没有健康数据详情，尝试加载\r\n        if (message.messageType === 2 && message.healthDataId && !message.healthData) {\r\n          this.loadHealthData(message)\r\n        }\r\n        \r\n        // 滚动到底部\r\n        this.$nextTick(() => {\r\n          this.scrollToBottom()\r\n        })\r\n      }\r\n    },\r\n    // 加载单条消息的健康数据\r\n    async loadHealthData(message) {\r\n      try {\r\n        const response = await this.$axios.get(`/health/record/detail/${message.healthDataId}`)\r\n        if (response.data.code === 200) {\r\n          this.$set(message, 'healthData', response.data.data)\r\n        }\r\n      } catch (error) {\r\n        console.error('获取健康数据详情出错', error)\r\n      }\r\n    },\r\n    // 发送消息\r\n    async sendMessage() {\r\n      if (!this.inputMessage.trim()) return\r\n      \r\n      try {\r\n        const message = {\r\n          consultationId: this.consultationId,\r\n          senderId: this.currentUserId,\r\n          senderType: 1, // 1:医生\r\n          receiverId: this.patientId,\r\n          content: this.inputMessage,\r\n          messageType: 0, // 0:文本\r\n          isRead: 0 // 0:未读\r\n        }\r\n        \r\n        // 如果WebSocket已连接，使用WebSocket发送消息\r\n        if (websocketService.isConnected()) {\r\n          const success = websocketService.sendMessage(this.consultationId, message)\r\n          if (success) {\r\n            // 清空输入框\r\n            this.inputMessage = ''\r\n            return\r\n          }\r\n        }\r\n        \r\n        // WebSocket发送失败或未连接，使用HTTP API发送\r\n        const response = await this.$axios.post('/doctor-message/send', message)\r\n        if (response.data.code === 200) {\r\n          // 清空输入框\r\n          this.inputMessage = ''\r\n          // 重新加载消息\r\n          this.loadMessages()\r\n        } else {\r\n          this.$message.error(response.data.msg || '发送消息失败')\r\n        }\r\n      } catch (error) {\r\n        console.error('发送消息出错', error)\r\n        this.$message.error('发送消息出错')\r\n      }\r\n    },\r\n    // 结束会话\r\n    async endConsultation() {\r\n      try {\r\n        const confirmed = await this.$confirm('确定要结束此次咨询吗?', '提示', {\r\n          confirmButtonText: '确定',\r\n          cancelButtonText: '取消',\r\n          type: 'warning'\r\n        })\r\n        \r\n        if (confirmed) {\r\n          const response = await this.$axios.put(`/consultation/end/${this.consultationId}`)\r\n          if (response.data.code === 200) {\r\n            this.$message.success('咨询已结束')\r\n            this.loadConsultationDetail()\r\n          } else {\r\n            this.$message.error(response.data.msg || '结束咨询失败')\r\n          }\r\n        }\r\n      } catch (error) {\r\n        if (error !== 'cancel') {\r\n          console.error('结束咨询出错', error)\r\n          this.$message.error('结束咨询出错')\r\n        }\r\n      }\r\n    },\r\n    // 分析健康数据\r\n    analyzeHealthData(healthData) {\r\n      this.selectedHealthData = healthData\r\n      \r\n      // 生成默认分析文本\r\n      let analysisTemplate = `患者${this.patientName}的${healthData.name}为${healthData.value}${healthData.unit}，`\r\n      \r\n      // 如果有正常范围，判断是否在范围内\r\n      if (healthData.valueRange) {\r\n        const ranges = healthData.valueRange.split(',')\r\n        const minValue = parseFloat(ranges[0])\r\n        const maxValue = parseFloat(ranges[1])\r\n        const currentValue = parseFloat(healthData.value)\r\n        \r\n        if (currentValue < minValue) {\r\n          analysisTemplate += `低于正常范围(${minValue}-${maxValue}${healthData.unit})。建议...`\r\n        } else if (currentValue > maxValue) {\r\n          analysisTemplate += `高于正常范围(${minValue}-${maxValue}${healthData.unit})。建议...`\r\n        } else {\r\n          analysisTemplate += `处于正常范围(${minValue}-${maxValue}${healthData.unit})内。`\r\n        }\r\n      } else {\r\n        analysisTemplate += `需要结合患者其他健康数据进行综合分析。`\r\n      }\r\n      \r\n      this.analysisText = analysisTemplate\r\n      this.analysisDialogVisible = true\r\n    },\r\n    // 发送分析结果\r\n    async sendAnalysis() {\r\n      if (!this.analysisText.trim()) {\r\n        this.$message.warning('请输入分析结果')\r\n        return\r\n      }\r\n      \r\n      try {\r\n        const message = {\r\n          consultationId: this.consultationId,\r\n          senderId: this.currentUserId,\r\n          senderType: 1, // 1:医生\r\n          receiverId: this.patientId,\r\n          content: this.analysisText,\r\n          messageType: 0, // 0:文本\r\n          isRead: 0 // 0:未读\r\n        }\r\n        \r\n        // 如果WebSocket已连接，使用WebSocket发送分析\r\n        if (websocketService.isConnected()) {\r\n          const success = websocketService.sendMessage(this.consultationId, message)\r\n          if (success) {\r\n            this.analysisDialogVisible = false\r\n            this.analysisText = ''\r\n            return\r\n          }\r\n        }\r\n        \r\n        // WebSocket发送失败或未连接，使用HTTP API发送\r\n        const response = await this.$axios.post('/doctor-message/send', message)\r\n        if (response.data.code === 200) {\r\n          this.analysisDialogVisible = false\r\n          this.analysisText = ''\r\n          this.loadMessages()\r\n        } else {\r\n          this.$message.error(response.data.msg || '发送分析结果失败')\r\n        }\r\n      } catch (error) {\r\n        console.error('发送分析结果出错', error)\r\n        this.$message.error('发送分析结果出错')\r\n      }\r\n    },\r\n    // 格式化日期\r\n    formatDate(dateStr) {\r\n      if (!dateStr) return ''\r\n      const date = new Date(dateStr)\r\n      return `${date.getFullYear()}-${(date.getMonth() + 1).toString().padStart(2, '0')}-${date.getDate().toString().padStart(2, '0')} ${date.getHours().toString().padStart(2, '0')}:${date.getMinutes().toString().padStart(2, '0')}`\r\n    },\r\n    // 滚动到底部\r\n    scrollToBottom() {\r\n      const container = this.$refs.messagesContainer\r\n      if (container) {\r\n        container.scrollTop = container.scrollHeight\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped lang=\"scss\">\r\n.doctor-chat {\r\n  height: calc(100vh - 150px);\r\n  display: flex;\r\n  flex-direction: column;\r\n  \r\n  .chat-header {\r\n    display: flex;\r\n    align-items: center;\r\n    padding: 15px 20px;\r\n    border-bottom: 1px solid #eee;\r\n    \r\n    .consultation-info {\r\n      flex: 1;\r\n      margin-left: 15px;\r\n      \r\n      h2 {\r\n        margin: 0 0 5px;\r\n        font-size: 18px;\r\n      }\r\n      \r\n      .status {\r\n        font-size: 14px;\r\n      }\r\n    }\r\n  }\r\n  \r\n  .chat-container {\r\n    flex: 1;\r\n    display: flex;\r\n    flex-direction: column;\r\n    overflow: hidden;\r\n    \r\n    .chat-messages {\r\n      flex: 1;\r\n      padding: 20px;\r\n      overflow-y: auto;\r\n      \r\n      .empty-messages {\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n        height: 100%;\r\n      }\r\n      \r\n      .message-item {\r\n        display: flex;\r\n        margin-bottom: 20px;\r\n        \r\n        &.self {\r\n          flex-direction: row-reverse;\r\n          \r\n          .message-content {\r\n            align-items: flex-end;\r\n            margin-right: 10px;\r\n            margin-left: 0;\r\n            \r\n            .text-content {\r\n              background-color: #67c23a;\r\n              color: white;\r\n              border-top-right-radius: 0;\r\n              border-top-left-radius: 8px;\r\n            }\r\n          }\r\n        }\r\n        \r\n        .avatar {\r\n          flex-shrink: 0;\r\n        }\r\n        \r\n        .message-content {\r\n          display: flex;\r\n          flex-direction: column;\r\n          margin-left: 10px;\r\n          max-width: 70%;\r\n          \r\n          .sender-name {\r\n            font-size: 12px;\r\n            color: #999;\r\n            margin-bottom: 5px;\r\n          }\r\n          \r\n          .text-content {\r\n            background-color: #f5f5f5;\r\n            padding: 10px 15px;\r\n            border-radius: 8px;\r\n            border-top-left-radius: 0;\r\n            word-break: break-word;\r\n          }\r\n          \r\n          .image-content {\r\n            max-width: 300px;\r\n            \r\n            .message-image {\r\n              max-width: 100%;\r\n              border-radius: 8px;\r\n            }\r\n          }\r\n          \r\n          .health-data-content {\r\n            .health-data-card {\r\n              border: 1px solid #eee;\r\n              border-radius: 8px;\r\n              overflow: hidden;\r\n              width: 300px;\r\n              \r\n              .health-data-header {\r\n                background-color: #f6f8fa;\r\n                padding: 10px;\r\n                font-weight: bold;\r\n                border-bottom: 1px solid #eee;\r\n                display: flex;\r\n                align-items: center;\r\n                \r\n                i {\r\n                  margin-right: 5px;\r\n                  color: #67c23a;\r\n                }\r\n              }\r\n              \r\n              .health-data-body {\r\n                padding: 10px;\r\n                background-color: white;\r\n                \r\n                .health-data-item {\r\n                  display: flex;\r\n                  margin-bottom: 5px;\r\n                  \r\n                  .item-label {\r\n                    color: #666;\r\n                    width: 70px;\r\n                  }\r\n                  \r\n                  .item-value {\r\n                    font-weight: 500;\r\n                  }\r\n                }\r\n                \r\n                .health-data-analysis {\r\n                  margin-top: 10px;\r\n                  display: flex;\r\n                  justify-content: flex-end;\r\n                }\r\n              }\r\n            }\r\n          }\r\n          \r\n          .message-time {\r\n            font-size: 12px;\r\n            color: #999;\r\n            margin-top: 5px;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    \r\n    .chat-input {\r\n      padding: 15px;\r\n      border-top: 1px solid #eee;\r\n      display: flex;\r\n      \r\n      .input-box {\r\n        flex: 1;\r\n      }\r\n      \r\n      .send-button {\r\n        align-self: flex-end;\r\n        margin-left: 10px;\r\n      }\r\n    }\r\n    \r\n    .chat-ended {\r\n      padding: 20px;\r\n    }\r\n  }\r\n  \r\n  .health-data-analysis-content {\r\n    padding: 20px;\r\n    \r\n    .health-data-info {\r\n      h3 {\r\n        margin-top: 0;\r\n        color: #67c23a;\r\n      }\r\n      \r\n      .health-data-value, .health-data-range {\r\n        margin-bottom: 10px;\r\n        \r\n        .label {\r\n          font-weight: bold;\r\n          color: #666;\r\n          margin-right: 10px;\r\n        }\r\n        \r\n        .value {\r\n          font-size: 16px;\r\n        }\r\n      }\r\n      \r\n      .analysis-result {\r\n        margin-top: 20px;\r\n        \r\n        h4 {\r\n          margin-bottom: 10px;\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n</style> "],"mappings":"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","ignoreList":[]}]}